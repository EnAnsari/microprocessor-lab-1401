
AVRASM ver. 2.1.30  C:\DATA\uni\micro-lab\microprocessor-lab-1401\session-2\code-vision\Debug\List\party.asm Sat Mar 04 16:37:39 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 4.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0034 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x2020060:
C:\DATA\uni\micro-lab\microprocessor-lab-1401\session-2\code-vision\Debug\List\party.asm(1117): warning: .cseg .db misalignment - padding zero byte
00002a 0001      	.DB  0x1
                 _0x2020000:
00002b 4e2d
00002c 4e41
00002d 4900
00002e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\DATA\uni\micro-lab\microprocessor-lab-1401\session-2\code-vision\Debug\List\party.asm(1120): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000030 0001      	.DW  0x01
000031 0260      	.DW  __seed_G101
000032 0054      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000033 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000034 94f8      	CLI
000035 27ee      	CLR  R30
000036 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000037 e0f1      	LDI  R31,1
000038 bffb      	OUT  GICR,R31
000039 bfeb      	OUT  GICR,R30
00003a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000047 e6e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000048 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000049 9185      	LPM  R24,Z+
00004a 9195      	LPM  R25,Z+
00004b 9700      	SBIW R24,0
00004c f061      	BREQ __GLOBAL_INI_END
00004d 91a5      	LPM  R26,Z+
00004e 91b5      	LPM  R27,Z+
00004f 9005      	LPM  R0,Z+
000050 9015      	LPM  R1,Z+
000051 01bf      	MOVW R22,R30
000052 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000053 9005      	LPM  R0,Z+
000054 920d      	ST   X+,R0
000055 9701      	SBIW R24,1
000056 f7e1      	BRNE __GLOBAL_INI_LOOP
000057 01fb      	MOVW R30,R22
000058 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000059 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005a bfed      	OUT  SPL,R30
00005b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005f 940c 0061 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <io.h>
                 ;#include <math.h>
                 ;
                 ;void main(void)
                 ; 0000 0007 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0008     int i, a, b, flag = 0;
                 ; 0000 0009     DDRA = DDRB = 0xFF;
000061 9722      	SBIW R28,2
000062 e0e0      	LDI  R30,LOW(0)
000063 83e8      	ST   Y,R30
000064 83e9      	STD  Y+1,R30
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                 ;	b -> R20,R21
                 ;	flag -> Y+0
000065 efef      	LDI  R30,LOW(255)
000066 bbe7      	OUT  0x17,R30
000067 bbea      	OUT  0x1A,R30
                 ; 0000 000A     while (1) {
                 _0x3:
                 ; 0000 000B         flag = !flag;
000068 81e8      	LD   R30,Y
000069 81f9      	LDD  R31,Y+1
00006a 940e 0497 	CALL __LNEGW1
00006c e0f0      	LDI  R31,0
00006d 83e8      	ST   Y,R30
00006e 83f9      	STD  Y+1,R31
                 ; 0000 000C         for(i = 0; i < 8; i++) {
                +
00006f e000     +LDI R16 , LOW ( 0 )
000070 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x7:
                +
000071 3008     +CPI R16 , LOW ( 8 )
000072 e0e0     +LDI R30 , HIGH ( 8 )
000073 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000074 f574      	BRGE _0x8
                 ; 0000 000D             if(flag) {
000075 81e8      	LD   R30,Y
000076 81f9      	LDD  R31,Y+1
000077 9730      	SBIW R30,0
000078 f051      	BREQ _0x9
                 ; 0000 000E                 a = pow(2, i);
000079 940e 025b 	CALL SUBOPT_0x0
00007b 01f8      	MOVW R30,R16
00007c 940e 0262 	CALL SUBOPT_0x1
                 ; 0000 000F                 b = pow(2, 7 - i);
00007e e0e7      	LDI  R30,LOW(7)
00007f e0f0      	LDI  R31,HIGH(7)
000080 1be0      	SUB  R30,R16
000081 0bf1      	SBC  R31,R17
000082 c009      	RJMP _0xC
                 ; 0000 0010             }
                 ; 0000 0011             else {
                 _0x9:
                 ; 0000 0012                 a = pow(2, 7 - i);
000083 940e 025b 	CALL SUBOPT_0x0
000085 e0e7      	LDI  R30,LOW(7)
000086 e0f0      	LDI  R31,HIGH(7)
000087 1be0      	SUB  R30,R16
000088 0bf1      	SBC  R31,R17
000089 940e 0262 	CALL SUBOPT_0x1
                 ; 0000 0013                 b = pow(2, i);
00008b 01f8      	MOVW R30,R16
                 _0xC:
00008c 940e 0492 	CALL __CWD1
00008e 940e 034d 	CALL __CDF1
000090 01df      	MOVW R26,R30
000091 01cb      	MOVW R24,R22
000092 940e 0209 	CALL _pow
000094 940e 0316 	CALL __CFD1
000096 01af      	MOVW R20,R30
                 ; 0000 0014             }
                 ; 0000 0015             PORTA = a;
000097 bb2b      	OUT  0x1B,R18
                 ; 0000 0016             PORTB = b;
000098 bb48      	OUT  0x18,R20
                 ; 0000 0017             delay_ms(200);
000099 eca8      	LDI  R26,LOW(200)
00009a e0b0      	LDI  R27,0
00009b 940e 02ba 	CALL _delay_ms
                 ; 0000 0018             PORTA = PORTB = 0x00;
00009d e0e0      	LDI  R30,LOW(0)
00009e bbe8      	OUT  0x18,R30
00009f bbeb      	OUT  0x1B,R30
                 ; 0000 0019         }
                +
0000a0 5f0f     +SUBI R16 , LOW ( - 1 )
0000a1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000a2 cfce      	RJMP _0x7
                 _0x8:
                 ; 0000 001A     }
0000a3 cfc4      	RJMP _0x3
                 ; 0000 001B }
                 _0xB:
0000a4 cfff      	RJMP _0xB
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0000a5 940e 04b5 	CALL __PUTPARD2
0000a7 817b         ldd  r23,y+3
0000a8 816a         ldd  r22,y+2
0000a9 81f9         ldd  r31,y+1
0000aa 81e8         ld   r30,y
0000ab fb77         bst  r23,7
0000ac 0f77         lsl  r23
0000ad fd67         sbrc r22,7
0000ae 6071         sbr  r23,1
0000af 2f97         mov  r25,r23
0000b0 579e         subi r25,0x7e
0000b1 f081         breq __ftrunc0
0000b2 f078         brcs __ftrunc0
0000b3 3198         cpi  r25,24
0000b4 f490         brsh __ftrunc1
0000b5 27aa         clr  r26
0000b6 27bb         clr  r27
0000b7 2788         clr  r24
                 __ftrunc2:
0000b8 9408         sec
0000b9 9587         ror  r24
0000ba 95b7         ror  r27
0000bb 95a7         ror  r26
0000bc 959a         dec  r25
0000bd f7d1         brne __ftrunc2
0000be 23ea         and  r30,r26
0000bf 23fb         and  r31,r27
0000c0 2368         and  r22,r24
0000c1 c005         rjmp __ftrunc1
                 __ftrunc0:
0000c2 94e8         clt
0000c3 2777         clr  r23
0000c4 27ee         clr  r30
0000c5 27ff         clr  r31
0000c6 2766         clr  r22
                 __ftrunc1:
0000c7 776f         cbr  r22,0x80
0000c8 9576         lsr  r23
0000c9 f408         brcc __ftrunc3
0000ca 6860         sbr  r22,0x80
                 __ftrunc3:
0000cb f977         bld  r23,7
0000cc 91a9         ld   r26,y+
0000cd 91b9         ld   r27,y+
0000ce 9189         ld   r24,y+
0000cf 9199         ld   r25,y+
0000d0 17ea         cp   r30,r26
0000d1 07fb         cpc  r31,r27
0000d2 0768         cpc  r22,r24
0000d3 0779         cpc  r23,r25
0000d4 fb97         bst  r25,7
0000d5 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0000d6 940e 04b5 	CALL __PUTPARD2
0000d8 940e 04a6 	CALL __GETD2S0
0000da 940e 00a5 	CALL _ftrunc
0000dc 940e 04ab 	CALL __PUTD1S0
0000de f419          brne __floor1
                 __floor0:
0000df 940e 026e 	CALL SUBOPT_0x2
0000e1 c005      	RJMP _0x2080004
                 __floor1:
0000e2 f7e6          brtc __floor0
0000e3 940e 026e 	CALL SUBOPT_0x2
0000e5 940e 0271 	CALL SUBOPT_0x3
                 _0x2080004:
0000e7 9624      	ADIW R28,4
0000e8 9508      	RET
                 ; .FEND
                 _log:
                 ; .FSTART _log
0000e9 940e 04b5 	CALL __PUTPARD2
0000eb 9724      	SBIW R28,4
0000ec 931a      	ST   -Y,R17
0000ed 930a      	ST   -Y,R16
0000ee 940e 0278 	CALL SUBOPT_0x4
0000f0 940e 04cb 	CALL __CPD02
0000f2 f02c      	BRLT _0x200000C
                +
0000f3 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0000f4 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0000f5 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0000f6 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0000f7 c073      	RJMP _0x2080003
                 _0x200000C:
0000f8 940e 027d 	CALL SUBOPT_0x5
0000fa 940e 04b0 	CALL __PUTPARD1
0000fc b7ad      	IN   R26,SPL
0000fd b7be      	IN   R27,SPH
0000fe 9711      	SBIW R26,1
0000ff 931f      	PUSH R17
000100 930f      	PUSH R16
000101 940e 02c4 	CALL _frexp
000103 910f      	POP  R16
000104 911f      	POP  R17
000105 940e 0282 	CALL SUBOPT_0x6
000107 940e 0278 	CALL SUBOPT_0x4
                +
000109 efe3     +LDI R30 , LOW ( 0x3F3504F3 )
00010a e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
00010b e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
00010c e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
00010d 940e 046a 	CALL __CMPF12
00010f f440      	BRSH _0x200000D
000110 940e 0287 	CALL SUBOPT_0x7
000112 940e 0387 	CALL __ADDF12
000114 940e 0282 	CALL SUBOPT_0x6
                +
000116 5001     +SUBI R16 , LOW ( 1 )
000117 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x200000D:
000118 940e 027d 	CALL SUBOPT_0x5
00011a 940e 0271 	CALL SUBOPT_0x3
00011c 937f      	PUSH R23
00011d 936f      	PUSH R22
00011e 93ff      	PUSH R31
00011f 93ef      	PUSH R30
000120 940e 027d 	CALL SUBOPT_0x5
                +
000122 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000123 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000124 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000125 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000126 940e 0387 	CALL __ADDF12
000128 91af      	POP  R26
000129 91bf      	POP  R27
00012a 918f      	POP  R24
00012b 919f      	POP  R25
00012c 940e 0425 	CALL __DIVF21
00012e 940e 0282 	CALL SUBOPT_0x6
000130 940e 0287 	CALL SUBOPT_0x7
000132 940e 0289 	CALL SUBOPT_0x8
                +
000134 e2a6     +LDI R26 , LOW ( 0x3F654226 )
000135 e4b2     +LDI R27 , HIGH ( 0x3F654226 )
000136 e685     +LDI R24 , BYTE3 ( 0x3F654226 )
000137 e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
000138 940e 0290 	CALL SUBOPT_0x9
                +
00013a e4ee     +LDI R30 , LOW ( 0x4054114E )
00013b e1f1     +LDI R31 , HIGH ( 0x4054114E )
00013c e564     +LDI R22 , BYTE3 ( 0x4054114E )
00013d e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
00013e 940e 0295 	CALL SUBOPT_0xA
000140 940e 0278 	CALL SUBOPT_0x4
000142 940e 03d7 	CALL __MULF12
000144 937f      	PUSH R23
000145 936f      	PUSH R22
000146 93ff      	PUSH R31
000147 93ef      	PUSH R30
000148 940e 029a 	CALL SUBOPT_0xB
                +
00014a e4ad     +LDI R26 , LOW ( 0x3FD4114D )
00014b e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
00014c ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
00014d e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
00014e 940e 0380 	CALL __SUBF12
000150 91af      	POP  R26
000151 91bf      	POP  R27
000152 918f      	POP  R24
000153 919f      	POP  R25
000154 940e 0425 	CALL __DIVF21
000156 937f      	PUSH R23
000157 936f      	PUSH R22
000158 93ff      	PUSH R31
000159 93ef      	PUSH R30
00015a 01f8      	MOVW R30,R16
00015b 940e 0492 	CALL __CWD1
00015d 940e 034d 	CALL __CDF1
                +
00015f e1a8     +LDI R26 , LOW ( 0x3F317218 )
000160 e7b2     +LDI R27 , HIGH ( 0x3F317218 )
000161 e381     +LDI R24 , BYTE3 ( 0x3F317218 )
000162 e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
000163 940e 03d7 	CALL __MULF12
000165 91af      	POP  R26
000166 91bf      	POP  R27
000167 918f      	POP  R24
000168 919f      	POP  R25
000169 940e 0387 	CALL __ADDF12
                 _0x2080003:
00016b 8119      	LDD  R17,Y+1
00016c 8108      	LDD  R16,Y+0
00016d 962a      	ADIW R28,10
00016e 9508      	RET
                 ; .FEND
                 _exp:
                 ; .FSTART _exp
00016f 940e 04b5 	CALL __PUTPARD2
000171 9728      	SBIW R28,8
000172 931a      	ST   -Y,R17
000173 930a      	ST   -Y,R16
000174 940e 029f 	CALL SUBOPT_0xC
                +
000176 e5e0     +LDI R30 , LOW ( 0xC2AEAC50 )
000177 eafc     +LDI R31 , HIGH ( 0xC2AEAC50 )
000178 ea6e     +LDI R22 , BYTE3 ( 0xC2AEAC50 )
000179 ec72     +LDI R23 , BYTE4 ( 0xC2AEAC50 )
                 	__GETD1N 0xC2AEAC50
00017a 940e 046a 	CALL __CMPF12
00017c f418      	BRSH _0x200000F
00017d 940e 02a4 	CALL SUBOPT_0xD
00017f c085      	RJMP _0x2080002
                 _0x200000F:
                +
000180 85ea     +LDD R30 , Y + 10
000181 85fb     +LDD R31 , Y + 10 + 1
000182 856c     +LDD R22 , Y + 10 + 2
000183 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000184 940e 04c7 	CALL __CPD10
000186 f429      	BRNE _0x2000010
                +
000187 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000188 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000189 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00018a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00018b c079      	RJMP _0x2080002
                 _0x2000010:
00018c 940e 029f 	CALL SUBOPT_0xC
                +
00018e e1e8     +LDI R30 , LOW ( 0x42B17218 )
00018f e7f2     +LDI R31 , HIGH ( 0x42B17218 )
000190 eb61     +LDI R22 , BYTE3 ( 0x42B17218 )
000191 e472     +LDI R23 , BYTE4 ( 0x42B17218 )
                 	__GETD1N 0x42B17218
000192 940e 046a 	CALL __CMPF12
000194 f009      	BREQ PC+2
000195 f408      	BRCC PC+2
000196 c005      	RJMP _0x2000011
                +
000197 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
000198 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
000199 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00019a e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00019b c069      	RJMP _0x2080002
                 _0x2000011:
00019c 940e 029f 	CALL SUBOPT_0xC
                +
00019e e3eb     +LDI R30 , LOW ( 0x3FB8AA3B )
00019f eafa     +LDI R31 , HIGH ( 0x3FB8AA3B )
0001a0 eb68     +LDI R22 , BYTE3 ( 0x3FB8AA3B )
0001a1 e37f     +LDI R23 , BYTE4 ( 0x3FB8AA3B )
                 	__GETD1N 0x3FB8AA3B
0001a2 940e 03d7 	CALL __MULF12
                +
0001a4 87ea     +STD Y + 10 , R30
0001a5 87fb     +STD Y + 10 + 1 , R31
0001a6 876c     +STD Y + 10 + 2 , R22
0001a7 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0001a8 940e 029f 	CALL SUBOPT_0xC
0001aa df2b      	RCALL _floor
0001ab 940e 0316 	CALL __CFD1
0001ad 018f      	MOVW R16,R30
0001ae 940e 029f 	CALL SUBOPT_0xC
0001b0 940e 0492 	CALL __CWD1
0001b2 940e 034d 	CALL __CDF1
0001b4 940e 0295 	CALL SUBOPT_0xA
0001b6 01df      	MOVW R26,R30
0001b7 01cb      	MOVW R24,R22
                +
0001b8 e0e0     +LDI R30 , LOW ( 0x3F000000 )
0001b9 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0001ba e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0001bb e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0001bc 940e 0295 	CALL SUBOPT_0xA
0001be 940e 0282 	CALL SUBOPT_0x6
0001c0 940e 0287 	CALL SUBOPT_0x7
0001c2 940e 0289 	CALL SUBOPT_0x8
                +
0001c4 e6ad     +LDI R26 , LOW ( 0x3D6C4C6D )
0001c5 e4bc     +LDI R27 , HIGH ( 0x3D6C4C6D )
0001c6 e68c     +LDI R24 , BYTE3 ( 0x3D6C4C6D )
0001c7 e39d     +LDI R25 , BYTE4 ( 0x3D6C4C6D )
                 	__GETD2N 0x3D6C4C6D
0001c8 940e 03d7 	CALL __MULF12
                +
0001ca eaa6     +LDI R26 , LOW ( 0x40E6E3A6 )
0001cb eeb3     +LDI R27 , HIGH ( 0x40E6E3A6 )
0001cc ee86     +LDI R24 , BYTE3 ( 0x40E6E3A6 )
0001cd e490     +LDI R25 , BYTE4 ( 0x40E6E3A6 )
                 	__GETD2N 0x40E6E3A6
0001ce 940e 0387 	CALL __ADDF12
0001d0 940e 0278 	CALL SUBOPT_0x4
0001d2 940e 03d7 	CALL __MULF12
0001d4 940e 0282 	CALL SUBOPT_0x6
0001d6 940e 029a 	CALL SUBOPT_0xB
                +
0001d8 e2a8     +LDI R26 , LOW ( 0x41A68D28 )
0001d9 e8bd     +LDI R27 , HIGH ( 0x41A68D28 )
0001da ea86     +LDI R24 , BYTE3 ( 0x41A68D28 )
0001db e491     +LDI R25 , BYTE4 ( 0x41A68D28 )
                 	__GETD2N 0x41A68D28
0001dc 940e 0387 	CALL __ADDF12
                +
0001de 83ea     +STD Y + 2 , R30
0001df 83fb     +STD Y + 2 + 1 , R31
0001e0 836c     +STD Y + 2 + 2 , R22
0001e1 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0001e2 940e 027d 	CALL SUBOPT_0x5
                +
0001e4 81aa     +LDD R26 , Y + 2
0001e5 81bb     +LDD R27 , Y + 2 + 1
0001e6 818c     +LDD R24 , Y + 2 + 2
0001e7 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0001e8 940e 0387 	CALL __ADDF12
                +
0001ea efa3     +LDI R26 , LOW ( 0x3FB504F3 )
0001eb e0b4     +LDI R27 , HIGH ( 0x3FB504F3 )
0001ec eb85     +LDI R24 , BYTE3 ( 0x3FB504F3 )
0001ed e39f     +LDI R25 , BYTE4 ( 0x3FB504F3 )
                 	__GETD2N 0x3FB504F3
0001ee 940e 03d7 	CALL __MULF12
0001f0 937f      	PUSH R23
0001f1 936f      	PUSH R22
0001f2 93ff      	PUSH R31
0001f3 93ef      	PUSH R30
0001f4 940e 0278 	CALL SUBOPT_0x4
0001f6 940e 029a 	CALL SUBOPT_0xB
0001f8 940e 0380 	CALL __SUBF12
0001fa 91af      	POP  R26
0001fb 91bf      	POP  R27
0001fc 918f      	POP  R24
0001fd 919f      	POP  R25
0001fe 940e 0425 	CALL __DIVF21
000200 940e 04b0 	CALL __PUTPARD1
000202 01d8      	MOVW R26,R16
000203 940e 02d5 	CALL _ldexp
                 _0x2080002:
000205 8119      	LDD  R17,Y+1
000206 8108      	LDD  R16,Y+0
000207 962e      	ADIW R28,14
000208 9508      	RET
                 ; .FEND
                 _pow:
                 ; .FSTART _pow
000209 940e 04b5 	CALL __PUTPARD2
00020b 9724      	SBIW R28,4
00020c 940e 02a9 	CALL SUBOPT_0xE
00020e 940e 04c7 	CALL __CPD10
000210 f419      	BRNE _0x2000012
000211 940e 02a4 	CALL SUBOPT_0xD
000213 c045      	RJMP _0x2080001
                 _0x2000012:
                +
000214 85a8     +LDD R26 , Y + 8
000215 85b9     +LDD R27 , Y + 8 + 1
000216 858a     +LDD R24 , Y + 8 + 2
000217 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000218 940e 04cb 	CALL __CPD02
00021a f494      	BRGE _0x2000013
00021b 940e 02ae 	CALL SUBOPT_0xF
00021d 940e 04c7 	CALL __CPD10
00021f f429      	BRNE _0x2000014
                +
000220 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000221 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000222 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000223 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000224 c034      	RJMP _0x2080001
                 _0x2000014:
                +
000225 85a8     +LDD R26 , Y + 8
000226 85b9     +LDD R27 , Y + 8 + 1
000227 858a     +LDD R24 , Y + 8 + 2
000228 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000229 940e 02b3 	CALL SUBOPT_0x10
00022b df43      	RCALL _exp
00022c c02c      	RJMP _0x2080001
                 _0x2000013:
00022d 940e 02ae 	CALL SUBOPT_0xF
00022f 01de      	MOVW R26,R28
000230 940e 0316 	CALL __CFD1
000232 940e 049c 	CALL __PUTDP1
000234 940e 026e 	CALL SUBOPT_0x2
000236 940e 034d 	CALL __CDF1
000238 01df      	MOVW R26,R30
000239 01cb      	MOVW R24,R22
00023a 940e 02ae 	CALL SUBOPT_0xF
00023c 940e 04d1 	CALL __CPD12
00023e f019      	BREQ _0x2000015
00023f 940e 02a4 	CALL SUBOPT_0xD
000241 c017      	RJMP _0x2080001
                 _0x2000015:
000242 940e 02a9 	CALL SUBOPT_0xE
000244 940e 02e1 	CALL __ANEGF1
000246 01df      	MOVW R26,R30
000247 01cb      	MOVW R24,R22
000248 940e 02b3 	CALL SUBOPT_0x10
00024a df24      	RCALL _exp
                +
00024b 87e8     +STD Y + 8 , R30
00024c 87f9     +STD Y + 8 + 1 , R31
00024d 876a     +STD Y + 8 + 2 , R22
00024e 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00024f 81e8      	LD   R30,Y
000250 70e1      	ANDI R30,LOW(0x1)
000251 f419      	BRNE _0x2000016
000252 940e 02a9 	CALL SUBOPT_0xE
000254 c004      	RJMP _0x2080001
                 _0x2000016:
000255 940e 02a9 	CALL SUBOPT_0xE
000257 940e 02e1 	CALL __ANEGF1
                 _0x2080001:
000259 962c      	ADIW R28,12
00025a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G101:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
                +
00025b e0e0     +LDI R30 , LOW ( 0x40000000 )
00025c e0f0     +LDI R31 , HIGH ( 0x40000000 )
00025d e060     +LDI R22 , BYTE3 ( 0x40000000 )
00025e e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00025f 940e 04b0 	CALL __PUTPARD1
000261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1:
000262 940e 0492 	CALL __CWD1
000264 940e 034d 	CALL __CDF1
000266 01df      	MOVW R26,R30
000267 01cb      	MOVW R24,R22
000268 940e 0209 	CALL _pow
00026a 940e 0316 	CALL __CFD1
00026c 019f      	MOVW R18,R30
00026d cfed      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00026e 940e 04a1 	CALL __GETD1S0
000270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000271 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000272 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000273 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000274 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000275 940e 0380 	CALL __SUBF12
000277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4:
                +
000278 81ae     +LDD R26 , Y + 6
000279 81bf     +LDD R27 , Y + 6 + 1
00027a 8588     +LDD R24 , Y + 6 + 2
00027b 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00027c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
                +
00027d 81ee     +LDD R30 , Y + 6
00027e 81ff     +LDD R31 , Y + 6 + 1
00027f 8568     +LDD R22 , Y + 6 + 2
000280 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000281 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
                +
000282 83ee     +STD Y + 6 , R30
000283 83ff     +STD Y + 6 + 1 , R31
000284 8768     +STD Y + 6 + 2 , R22
000285 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000286 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000287 dff5      	RCALL SUBOPT_0x5
000288 cfef      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000289 940e 03d7 	CALL __MULF12
                +
00028b 83ea     +STD Y + 2 , R30
00028c 83fb     +STD Y + 2 + 1 , R31
00028d 836c     +STD Y + 2 + 2 , R22
00028e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00028f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000290 940e 03d7 	CALL __MULF12
000292 01df      	MOVW R26,R30
000293 01cb      	MOVW R24,R22
000294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000295 940e 04ba 	CALL __SWAPD12
000297 940e 0380 	CALL __SUBF12
000299 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
00029a 81ea     +LDD R30 , Y + 2
00029b 81fb     +LDD R31 , Y + 2 + 1
00029c 816c     +LDD R22 , Y + 2 + 2
00029d 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00029e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
00029f 85aa     +LDD R26 , Y + 10
0002a0 85bb     +LDD R27 , Y + 10 + 1
0002a1 858c     +LDD R24 , Y + 10 + 2
0002a2 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0002a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
0002a4 e0e0     +LDI R30 , LOW ( 0x0 )
0002a5 e0f0     +LDI R31 , HIGH ( 0x0 )
0002a6 e060     +LDI R22 , BYTE3 ( 0x0 )
0002a7 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0002a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
0002a9 85e8     +LDD R30 , Y + 8
0002aa 85f9     +LDD R31 , Y + 8 + 1
0002ab 856a     +LDD R22 , Y + 8 + 2
0002ac 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
0002ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
0002ae 81ec     +LDD R30 , Y + 4
0002af 81fd     +LDD R31 , Y + 4 + 1
0002b0 816e     +LDD R22 , Y + 4 + 2
0002b1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0002b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
0002b3 940e 00e9 	CALL _log
                +
0002b5 81ac     +LDD R26 , Y + 4
0002b6 81bd     +LDD R27 , Y + 4 + 1
0002b7 818e     +LDD R24 , Y + 4 + 2
0002b8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002b9 cfd6      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
0002ba 9610      	adiw r26,0
0002bb f039      	breq __delay_ms1
                 __delay_ms0:
0002bc 95a8      	wdr
                +
0002bd ee88     +LDI R24 , LOW ( 0x3E8 )
0002be e093     +LDI R25 , HIGH ( 0x3E8 )
                +__DELAY_USW_LOOP :
0002bf 9701     +SBIW R24 , 1
0002c0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3E8
0002c1 9711      	sbiw r26,1
0002c2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002c3 9508      	ret
                 
                 _frexp:
0002c4 91e9      	LD   R30,Y+
0002c5 91f9      	LD   R31,Y+
0002c6 9169      	LD   R22,Y+
0002c7 9179      	LD   R23,Y+
0002c8 fb77      	BST  R23,7
0002c9 0f66      	LSL  R22
0002ca 1f77      	ROL  R23
0002cb 2788      	CLR  R24
0002cc 577e      	SUBI R23,0x7E
0002cd 0b88      	SBC  R24,R24
0002ce 937d      	ST   X+,R23
0002cf 938c      	ST   X,R24
0002d0 e77e      	LDI  R23,0x7E
0002d1 9576      	LSR  R23
0002d2 9567      	ROR  R22
0002d3 f06e      	BRTS __ANEGF1
0002d4 9508      	RET
                 
                 _ldexp:
0002d5 91e9      	LD   R30,Y+
0002d6 91f9      	LD   R31,Y+
0002d7 9169      	LD   R22,Y+
0002d8 9179      	LD   R23,Y+
0002d9 fb77      	BST  R23,7
0002da 0f66      	LSL  R22
0002db 1f77      	ROL  R23
0002dc 0f7a      	ADD  R23,R26
0002dd 9576      	LSR  R23
0002de 9567      	ROR  R22
0002df f00e      	BRTS __ANEGF1
0002e0 9508      	RET
                 
                 __ANEGF1:
0002e1 9730      	SBIW R30,0
0002e2 4060      	SBCI R22,0
0002e3 4070      	SBCI R23,0
0002e4 f009      	BREQ __ANEGF10
0002e5 5870      	SUBI R23,0x80
                 __ANEGF10:
0002e6 9508      	RET
                 
                 __ROUND_REPACK:
0002e7 2355      	TST  R21
0002e8 f442      	BRPL __REPACK
0002e9 3850      	CPI  R21,0x80
0002ea f411      	BRNE __ROUND_REPACK0
0002eb ffe0      	SBRS R30,0
0002ec c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0002ed 9631      	ADIW R30,1
0002ee 1f69      	ADC  R22,R25
0002ef 1f79      	ADC  R23,R25
0002f0 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0002f1 e850      	LDI  R21,0x80
0002f2 2757      	EOR  R21,R23
0002f3 f411      	BRNE __REPACK0
0002f4 935f      	PUSH R21
0002f5 c0cf      	RJMP __ZERORES
                 __REPACK0:
0002f6 3f5f      	CPI  R21,0xFF
0002f7 f031      	BREQ __REPACK1
0002f8 0f66      	LSL  R22
0002f9 0c00      	LSL  R0
0002fa 9557      	ROR  R21
0002fb 9567      	ROR  R22
0002fc 2f75      	MOV  R23,R21
0002fd 9508      	RET
                 __REPACK1:
0002fe 935f      	PUSH R21
0002ff 2000      	TST  R0
000300 f00a      	BRMI __REPACK2
000301 c0cf      	RJMP __MAXRES
                 __REPACK2:
000302 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000303 e850      	LDI  R21,0x80
000304 2e19      	MOV  R1,R25
000305 2215      	AND  R1,R21
000306 0f88      	LSL  R24
000307 1f99      	ROL  R25
000308 2795      	EOR  R25,R21
000309 0f55      	LSL  R21
00030a 9587      	ROR  R24
                 
                 __UNPACK1:
00030b e850      	LDI  R21,0x80
00030c 2e07      	MOV  R0,R23
00030d 2205      	AND  R0,R21
00030e 0f66      	LSL  R22
00030f 1f77      	ROL  R23
000310 2775      	EOR  R23,R21
000311 0f55      	LSL  R21
000312 9567      	ROR  R22
000313 9508      	RET
                 
                 __CFD1U:
000314 9468      	SET
000315 c001      	RJMP __CFD1U0
                 __CFD1:
000316 94e8      	CLT
                 __CFD1U0:
000317 935f      	PUSH R21
000318 dff2      	RCALL __UNPACK1
000319 3870      	CPI  R23,0x80
00031a f018      	BRLO __CFD10
00031b 3f7f      	CPI  R23,0xFF
00031c f408      	BRCC __CFD10
00031d c0a7      	RJMP __ZERORES
                 __CFD10:
00031e e156      	LDI  R21,22
00031f 1b57      	SUB  R21,R23
000320 f4aa      	BRPL __CFD11
000321 9551      	NEG  R21
000322 3058      	CPI  R21,8
000323 f40e      	BRTC __CFD19
000324 3059      	CPI  R21,9
                 __CFD19:
000325 f030      	BRLO __CFD17
000326 efef      	SER  R30
000327 efff      	SER  R31
000328 ef6f      	SER  R22
000329 e77f      	LDI  R23,0x7F
00032a f977      	BLD  R23,7
00032b c01a      	RJMP __CFD15
                 __CFD17:
00032c 2777      	CLR  R23
00032d 2355      	TST  R21
00032e f0b9      	BREQ __CFD15
                 __CFD18:
00032f 0fee      	LSL  R30
000330 1fff      	ROL  R31
000331 1f66      	ROL  R22
000332 1f77      	ROL  R23
000333 955a      	DEC  R21
000334 f7d1      	BRNE __CFD18
000335 c010      	RJMP __CFD15
                 __CFD11:
000336 2777      	CLR  R23
                 __CFD12:
000337 3058      	CPI  R21,8
000338 f028      	BRLO __CFD13
000339 2fef      	MOV  R30,R31
00033a 2ff6      	MOV  R31,R22
00033b 2f67      	MOV  R22,R23
00033c 5058      	SUBI R21,8
00033d cff9      	RJMP __CFD12
                 __CFD13:
00033e 2355      	TST  R21
00033f f031      	BREQ __CFD15
                 __CFD14:
000340 9576      	LSR  R23
000341 9567      	ROR  R22
000342 95f7      	ROR  R31
000343 95e7      	ROR  R30
000344 955a      	DEC  R21
000345 f7d1      	BRNE __CFD14
                 __CFD15:
000346 2000      	TST  R0
000347 f40a      	BRPL __CFD16
000348 d141      	RCALL __ANEGD1
                 __CFD16:
000349 915f      	POP  R21
00034a 9508      	RET
                 
                 __CDF1U:
00034b 9468      	SET
00034c c001      	RJMP __CDF1U0
                 __CDF1:
00034d 94e8      	CLT
                 __CDF1U0:
00034e 9730      	SBIW R30,0
00034f 4060      	SBCI R22,0
000350 4070      	SBCI R23,0
000351 f0b1      	BREQ __CDF10
000352 2400      	CLR  R0
000353 f026      	BRTS __CDF11
000354 2377      	TST  R23
000355 f412      	BRPL __CDF11
000356 9400      	COM  R0
000357 d132      	RCALL __ANEGD1
                 __CDF11:
000358 2e17      	MOV  R1,R23
000359 e17e      	LDI  R23,30
00035a 2011      	TST  R1
                 __CDF12:
00035b f032      	BRMI __CDF13
00035c 957a      	DEC  R23
00035d 0fee      	LSL  R30
00035e 1fff      	ROL  R31
00035f 1f66      	ROL  R22
000360 1c11      	ROL  R1
000361 cff9      	RJMP __CDF12
                 __CDF13:
000362 2fef      	MOV  R30,R31
000363 2ff6      	MOV  R31,R22
000364 2d61      	MOV  R22,R1
000365 935f      	PUSH R21
000366 df8a      	RCALL __REPACK
000367 915f      	POP  R21
                 __CDF10:
000368 9508      	RET
                 
                 __SWAPACC:
000369 934f      	PUSH R20
00036a 01af      	MOVW R20,R30
00036b 01fd      	MOVW R30,R26
00036c 01da      	MOVW R26,R20
00036d 01ab      	MOVW R20,R22
00036e 01bc      	MOVW R22,R24
00036f 01ca      	MOVW R24,R20
000370 2d40      	MOV  R20,R0
000371 2c01      	MOV  R0,R1
000372 2e14      	MOV  R1,R20
000373 914f      	POP  R20
000374 9508      	RET
                 
                 __UADD12:
000375 0fea      	ADD  R30,R26
000376 1ffb      	ADC  R31,R27
000377 1f68      	ADC  R22,R24
000378 9508      	RET
                 
                 __NEGMAN1:
000379 95e0      	COM  R30
00037a 95f0      	COM  R31
00037b 9560      	COM  R22
00037c 5fef      	SUBI R30,-1
00037d 4fff      	SBCI R31,-1
00037e 4f6f      	SBCI R22,-1
00037f 9508      	RET
                 
                 __SUBF12:
000380 935f      	PUSH R21
000381 df81      	RCALL __UNPACK
000382 3890      	CPI  R25,0x80
000383 f171      	BREQ __ADDF129
000384 e850      	LDI  R21,0x80
000385 2615      	EOR  R1,R21
                 
000386 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000387 935f      	PUSH R21
000388 df7a      	RCALL __UNPACK
000389 3890      	CPI  R25,0x80
00038a f139      	BREQ __ADDF129
                 
                 __ADDF120:
00038b 3870      	CPI  R23,0x80
00038c f121      	BREQ __ADDF128
                 __ADDF121:
00038d 2f57      	MOV  R21,R23
00038e 1b59      	SUB  R21,R25
00038f f12b      	BRVS __ADDF1211
000390 f412      	BRPL __ADDF122
000391 dfd7      	RCALL __SWAPACC
000392 cffa      	RJMP __ADDF121
                 __ADDF122:
000393 3158      	CPI  R21,24
000394 f018      	BRLO __ADDF123
000395 27aa      	CLR  R26
000396 27bb      	CLR  R27
000397 2788      	CLR  R24
                 __ADDF123:
000398 3058      	CPI  R21,8
000399 f028      	BRLO __ADDF124
00039a 2fab      	MOV  R26,R27
00039b 2fb8      	MOV  R27,R24
00039c 2788      	CLR  R24
00039d 5058      	SUBI R21,8
00039e cff9      	RJMP __ADDF123
                 __ADDF124:
00039f 2355      	TST  R21
0003a0 f029      	BREQ __ADDF126
                 __ADDF125:
0003a1 9586      	LSR  R24
0003a2 95b7      	ROR  R27
0003a3 95a7      	ROR  R26
0003a4 955a      	DEC  R21
0003a5 f7d9      	BRNE __ADDF125
                 __ADDF126:
0003a6 2d50      	MOV  R21,R0
0003a7 2551      	EOR  R21,R1
0003a8 f072      	BRMI __ADDF127
0003a9 dfcb      	RCALL __UADD12
0003aa f438      	BRCC __ADDF129
0003ab 9567      	ROR  R22
0003ac 95f7      	ROR  R31
0003ad 95e7      	ROR  R30
0003ae 9573      	INC  R23
0003af f413      	BRVC __ADDF129
0003b0 c020      	RJMP __MAXRES
                 __ADDF128:
0003b1 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0003b2 df3e      	RCALL __REPACK
0003b3 915f      	POP  R21
0003b4 9508      	RET
                 __ADDF1211:
0003b5 f7d8      	BRCC __ADDF128
0003b6 cffb      	RJMP __ADDF129
                 __ADDF127:
0003b7 1bea      	SUB  R30,R26
0003b8 0bfb      	SBC  R31,R27
0003b9 0b68      	SBC  R22,R24
0003ba f051      	BREQ __ZERORES
0003bb f410      	BRCC __ADDF1210
0003bc 9400      	COM  R0
0003bd dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0003be 2366      	TST  R22
0003bf f392      	BRMI __ADDF129
0003c0 0fee      	LSL  R30
0003c1 1fff      	ROL  R31
0003c2 1f66      	ROL  R22
0003c3 957a      	DEC  R23
0003c4 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0003c5 27ee      	CLR  R30
0003c6 27ff      	CLR  R31
0003c7 2766      	CLR  R22
0003c8 2777      	CLR  R23
0003c9 915f      	POP  R21
0003ca 9508      	RET
                 
                 __MINRES:
0003cb efef      	SER  R30
0003cc efff      	SER  R31
0003cd e76f      	LDI  R22,0x7F
0003ce ef7f      	SER  R23
0003cf 915f      	POP  R21
0003d0 9508      	RET
                 
                 __MAXRES:
0003d1 efef      	SER  R30
0003d2 efff      	SER  R31
0003d3 e76f      	LDI  R22,0x7F
0003d4 e77f      	LDI  R23,0x7F
0003d5 915f      	POP  R21
0003d6 9508      	RET
                 
                 __MULF12:
0003d7 935f      	PUSH R21
0003d8 df2a      	RCALL __UNPACK
0003d9 3870      	CPI  R23,0x80
0003da f351      	BREQ __ZERORES
0003db 3890      	CPI  R25,0x80
0003dc f341      	BREQ __ZERORES
0003dd 2401      	EOR  R0,R1
0003de 9408      	SEC
0003df 1f79      	ADC  R23,R25
0003e0 f423      	BRVC __MULF124
0003e1 f31c      	BRLT __ZERORES
                 __MULF125:
0003e2 2000      	TST  R0
0003e3 f33a      	BRMI __MINRES
0003e4 cfec      	RJMP __MAXRES
                 __MULF124:
0003e5 920f      	PUSH R0
0003e6 931f      	PUSH R17
0003e7 932f      	PUSH R18
0003e8 933f      	PUSH R19
0003e9 934f      	PUSH R20
0003ea 2711      	CLR  R17
0003eb 2722      	CLR  R18
0003ec 2799      	CLR  R25
0003ed 9f68      	MUL  R22,R24
0003ee 01a0      	MOVW R20,R0
0003ef 9f8f      	MUL  R24,R31
0003f0 2d30      	MOV  R19,R0
0003f1 0d41      	ADD  R20,R1
0003f2 1f59      	ADC  R21,R25
0003f3 9f6b      	MUL  R22,R27
0003f4 0d30      	ADD  R19,R0
0003f5 1d41      	ADC  R20,R1
0003f6 1f59      	ADC  R21,R25
0003f7 9f8e      	MUL  R24,R30
0003f8 d027      	RCALL __MULF126
0003f9 9fbf      	MUL  R27,R31
0003fa d025      	RCALL __MULF126
0003fb 9f6a      	MUL  R22,R26
0003fc d023      	RCALL __MULF126
0003fd 9fbe      	MUL  R27,R30
0003fe d01d      	RCALL __MULF127
0003ff 9faf      	MUL  R26,R31
000400 d01b      	RCALL __MULF127
000401 9fae      	MUL  R26,R30
000402 0d11      	ADD  R17,R1
000403 1f29      	ADC  R18,R25
000404 1f39      	ADC  R19,R25
000405 1f49      	ADC  R20,R25
000406 1f59      	ADC  R21,R25
000407 2fe3      	MOV  R30,R19
000408 2ff4      	MOV  R31,R20
000409 2f65      	MOV  R22,R21
00040a 2f52      	MOV  R21,R18
00040b 914f      	POP  R20
00040c 913f      	POP  R19
00040d 912f      	POP  R18
00040e 911f      	POP  R17
00040f 900f      	POP  R0
000410 2366      	TST  R22
000411 f02a      	BRMI __MULF122
000412 0f55      	LSL  R21
000413 1fee      	ROL  R30
000414 1fff      	ROL  R31
000415 1f66      	ROL  R22
000416 c002      	RJMP __MULF123
                 __MULF122:
000417 9573      	INC  R23
000418 f24b      	BRVS __MULF125
                 __MULF123:
000419 decd      	RCALL __ROUND_REPACK
00041a 915f      	POP  R21
00041b 9508      	RET
                 
                 __MULF127:
00041c 0d10      	ADD  R17,R0
00041d 1d21      	ADC  R18,R1
00041e 1f39      	ADC  R19,R25
00041f c002      	RJMP __MULF128
                 __MULF126:
000420 0d20      	ADD  R18,R0
000421 1d31      	ADC  R19,R1
                 __MULF128:
000422 1f49      	ADC  R20,R25
000423 1f59      	ADC  R21,R25
000424 9508      	RET
                 
                 __DIVF21:
000425 935f      	PUSH R21
000426 dedc      	RCALL __UNPACK
000427 3870      	CPI  R23,0x80
000428 f421      	BRNE __DIVF210
000429 2011      	TST  R1
                 __DIVF211:
00042a f40a      	BRPL __DIVF219
00042b cf9f      	RJMP __MINRES
                 __DIVF219:
00042c cfa4      	RJMP __MAXRES
                 __DIVF210:
00042d 3890      	CPI  R25,0x80
00042e f409      	BRNE __DIVF218
                 __DIVF217:
00042f cf95      	RJMP __ZERORES
                 __DIVF218:
000430 2401      	EOR  R0,R1
000431 9408      	SEC
000432 0b97      	SBC  R25,R23
000433 f41b      	BRVC __DIVF216
000434 f3d4      	BRLT __DIVF217
000435 2000      	TST  R0
000436 cff3      	RJMP __DIVF211
                 __DIVF216:
000437 2f79      	MOV  R23,R25
000438 931f      	PUSH R17
000439 932f      	PUSH R18
00043a 933f      	PUSH R19
00043b 934f      	PUSH R20
00043c 2411      	CLR  R1
00043d 2711      	CLR  R17
00043e 2722      	CLR  R18
00043f 2733      	CLR  R19
000440 2744      	CLR  R20
000441 2755      	CLR  R21
000442 e290      	LDI  R25,32
                 __DIVF212:
000443 17ae      	CP   R26,R30
000444 07bf      	CPC  R27,R31
000445 0786      	CPC  R24,R22
000446 0741      	CPC  R20,R17
000447 f030      	BRLO __DIVF213
000448 1bae      	SUB  R26,R30
000449 0bbf      	SBC  R27,R31
00044a 0b86      	SBC  R24,R22
00044b 0b41      	SBC  R20,R17
00044c 9408      	SEC
00044d c001      	RJMP __DIVF214
                 __DIVF213:
00044e 9488      	CLC
                 __DIVF214:
00044f 1f55      	ROL  R21
000450 1f22      	ROL  R18
000451 1f33      	ROL  R19
000452 1c11      	ROL  R1
000453 1faa      	ROL  R26
000454 1fbb      	ROL  R27
000455 1f88      	ROL  R24
000456 1f44      	ROL  R20
000457 959a      	DEC  R25
000458 f751      	BRNE __DIVF212
000459 01f9      	MOVW R30,R18
00045a 2d61      	MOV  R22,R1
00045b 914f      	POP  R20
00045c 913f      	POP  R19
00045d 912f      	POP  R18
00045e 911f      	POP  R17
00045f 2366      	TST  R22
000460 f032      	BRMI __DIVF215
000461 0f55      	LSL  R21
000462 1fee      	ROL  R30
000463 1fff      	ROL  R31
000464 1f66      	ROL  R22
000465 957a      	DEC  R23
000466 f243      	BRVS __DIVF217
                 __DIVF215:
000467 de7f      	RCALL __ROUND_REPACK
000468 915f      	POP  R21
000469 9508      	RET
                 
                 __CMPF12:
00046a 2399      	TST  R25
00046b f09a      	BRMI __CMPF120
00046c 2377      	TST  R23
00046d f042      	BRMI __CMPF121
00046e 1797      	CP   R25,R23
00046f f048      	BRLO __CMPF122
000470 f429      	BRNE __CMPF121
000471 17ae      	CP   R26,R30
000472 07bf      	CPC  R27,R31
000473 0786      	CPC  R24,R22
000474 f020      	BRLO __CMPF122
000475 f031      	BREQ __CMPF123
                 __CMPF121:
000476 9498      	CLZ
000477 9488      	CLC
000478 9508      	RET
                 __CMPF122:
000479 9498      	CLZ
00047a 9408      	SEC
00047b 9508      	RET
                 __CMPF123:
00047c 9418      	SEZ
00047d 9488      	CLC
00047e 9508      	RET
                 __CMPF120:
00047f 2377      	TST  R23
000480 f7c2      	BRPL __CMPF122
000481 1797      	CP   R25,R23
000482 f398      	BRLO __CMPF121
000483 f7a9      	BRNE __CMPF122
000484 17ea      	CP   R30,R26
000485 07fb      	CPC  R31,R27
000486 0768      	CPC  R22,R24
000487 f388      	BRLO __CMPF122
000488 f399      	BREQ __CMPF123
000489 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
00048a 95f0      	COM  R31
00048b 9560      	COM  R22
00048c 9570      	COM  R23
00048d 95e1      	NEG  R30
00048e 4fff      	SBCI R31,-1
00048f 4f6f      	SBCI R22,-1
000490 4f7f      	SBCI R23,-1
000491 9508      	RET
                 
                 __CWD1:
000492 2f6f      	MOV  R22,R31
000493 0f66      	ADD  R22,R22
000494 0b66      	SBC  R22,R22
000495 2f76      	MOV  R23,R22
000496 9508      	RET
                 
                 __LNEGW1:
000497 2bef      	OR   R30,R31
000498 e0e1      	LDI  R30,1
000499 f009      	BREQ __LNEGW1F
00049a e0e0      	LDI  R30,0
                 __LNEGW1F:
00049b 9508      	RET
                 
                 __PUTDP1:
00049c 93ed      	ST   X+,R30
00049d 93fd      	ST   X+,R31
00049e 936d      	ST   X+,R22
00049f 937c      	ST   X,R23
0004a0 9508      	RET
                 
                 __GETD1S0:
0004a1 81e8      	LD   R30,Y
0004a2 81f9      	LDD  R31,Y+1
0004a3 816a      	LDD  R22,Y+2
0004a4 817b      	LDD  R23,Y+3
0004a5 9508      	RET
                 
                 __GETD2S0:
0004a6 81a8      	LD   R26,Y
0004a7 81b9      	LDD  R27,Y+1
0004a8 818a      	LDD  R24,Y+2
0004a9 819b      	LDD  R25,Y+3
0004aa 9508      	RET
                 
                 __PUTD1S0:
0004ab 83e8      	ST   Y,R30
0004ac 83f9      	STD  Y+1,R31
0004ad 836a      	STD  Y+2,R22
0004ae 837b      	STD  Y+3,R23
0004af 9508      	RET
                 
                 __PUTPARD1:
0004b0 937a      	ST   -Y,R23
0004b1 936a      	ST   -Y,R22
0004b2 93fa      	ST   -Y,R31
0004b3 93ea      	ST   -Y,R30
0004b4 9508      	RET
                 
                 __PUTPARD2:
0004b5 939a      	ST   -Y,R25
0004b6 938a      	ST   -Y,R24
0004b7 93ba      	ST   -Y,R27
0004b8 93aa      	ST   -Y,R26
0004b9 9508      	RET
                 
                 __SWAPD12:
0004ba 2e18      	MOV  R1,R24
0004bb 2f86      	MOV  R24,R22
0004bc 2d61      	MOV  R22,R1
0004bd 2e19      	MOV  R1,R25
0004be 2f97      	MOV  R25,R23
0004bf 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0004c0 2e1b      	MOV  R1,R27
0004c1 2fbf      	MOV  R27,R31
0004c2 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0004c3 2e1a      	MOV  R1,R26
0004c4 2fae      	MOV  R26,R30
0004c5 2de1      	MOV  R30,R1
0004c6 9508      	RET
                 
                 __CPD10:
0004c7 9730      	SBIW R30,0
0004c8 4060      	SBCI R22,0
0004c9 4070      	SBCI R23,0
0004ca 9508      	RET
                 
                 __CPD02:
0004cb 2400      	CLR  R0
0004cc 160a      	CP   R0,R26
0004cd 060b      	CPC  R0,R27
0004ce 0608      	CPC  R0,R24
0004cf 0609      	CPC  R0,R25
0004d0 9508      	RET
                 
                 __CPD12:
0004d1 17ea      	CP   R30,R26
0004d2 07fb      	CPC  R31,R27
0004d3 0768      	CPC  R22,R24
0004d4 0779      	CPC  R23,R25
0004d5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  31 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  17 r17:  22 r18:  14 r19:  12 r20:  24 r21:  63 r22: 103 r23:  99 
r24:  67 r25:  63 r26:  62 r27:  48 r28:  10 r29:   1 r30: 123 r31:  81 
x  :   9 y  : 117 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   6 and   :   5 andi  :   1 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   6 brcs  :   1 break :   0 breq  :  21 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   3 brmi  :   9 brne  :  21 brpl  :   7 brsh  :   3 brtc  :   2 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 118 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  31 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   8 cpc   :  17 cpi   :  18 cpse  :   0 dec   :   9 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  22 ld    :  18 ldd   :  59 ldi   : 125 
lds   :   0 lpm   :   7 lsl   :  14 lsr   :   5 mov   :  39 movw  :  31 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   0 out   :  12 pop   :  36 push  :  36 rcall :  24 ret   :  53 
reti  :   0 rjmp  :  45 rol   :  26 ror   :  17 sbc   :  10 sbci  :  13 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  14 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  24 std   :  25 sts   :   0 sub   :   6 subi  :   8 swap  :   0 
tst   :  17 wdr   :   1 
Instructions used: 72 out of 116 (62.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009ac   2456     20   2476   32768   7.6%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
